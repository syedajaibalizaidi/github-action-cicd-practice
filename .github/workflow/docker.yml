### IN CERTAIN CASES TO HAVE THE FULL CONTROL OVER THE ENV WE USE DOCKER CONTAINERS IN GITHUB ACTIONS. 
### GHA SERVICE CONTAINERS -> THEY ALLOW US TO RUN EXTRA SERVICES SIDE BY SIDE. E.G RUNNING DATABASES IS POPULAR EXAMPLE IN THIS CASE.
### SERVICES BELONG TO ONE SPECIFIC JOB FOR EXAMPLE A SERVICE FOR TESTING AND ANOTHER SERVICE FOR DEV ENV.  
### COMMUNICATION BW JOBS AND SERVICES -> 

name: Deployment (Container)
on:
  push:
    branches:
      - main
      - dev
env:
  CACHE_KEY: node-deps
  MONGODB_DB_NAME: gha-demo
jobs:
  test:
    environment: testing
    runs-on: ubuntu-latest
    conatiner: 
      image: node:24
    env:
      MONGODB_CONNECTION_PROTOCOL: mongodb
      MONGODB_CLUSTER_ADDRESS: mongodb ### svc containers labels for connecting with the job. 
      MONGODB_USERNAME: root 
      MONGODB_PASSWORD: example 
      PORT: 8080
    services: ### here is how we use service container, then svc name , image of svc then env 
      mongodb: ### label name 
        image: mongo 
        env: 
           MONGO_INITDB_ROOT_USERNAME: root ### this is a testing database so it wont be a security issue here once created it get deleted. 
           MONGO_INITDB_ROOT_PASSWORD: example
    steps:
      - name: Get Code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Run server
        run: npm start & npx wait-on http://127.0.0.1:$PORT # requires MongoDB Atlas to accept requests from anywhere!
      - name: Run tests
        run: npm test
      - name: Output information
        run: |
          echo "MONGODB_USERNAME: $MONGODB_USERNAME"
  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Output information
        env:
          PORT: 3000
        run: |        
          echo "MONGODB_DB_NAME: $MONGODB_DB_NAME"
          echo "MONGODB_USERNAME: $MONGODB_USERNAME"
          echo "${{ env.PORT }}"
